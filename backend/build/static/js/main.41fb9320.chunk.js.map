{"version":3,"sources":["components/SidePanelView.js","components/ListView.js","components/TodoView.js","components/DefaultView.js","services/login.js","services/todos.js","components/LoginView.js","App.js","index.js"],"names":["SidePanelView","lists","user","setUser","setLists","addList","useState","navigate","useNavigate","className","onClick","window","localStorage","removeItem","map","list","to","name","id","ListView","addTodo","removeTodo","removeList","showTodoForm","setShowTodoForm","filter","setFilter","setName","description","setDescription","Date","toISOString","substring","deadline","setDeadline","confirm","handleRemoveList","onSubmit","event","preventDefault","status","type","placeholder","value","onChange","target","todos","todo","sort","a","b","getTime","handleRemoveTodo","toDateString","TodoView","editTodo","params","useParams","defaultChecked","changedTodo","handleEditTodo","DefaultView","login","credentials","axios","post","response","data","signin","baseUrl","bearer","getTodoLists","config","headers","Authorization","get","listId","delete","todoId","put","setToken","token","LoginView","signup","setSignup","username","setUsername","password","setPassword","handleLogin","loginService","setItem","JSON","stringify","todoService","alert","handleSignup","values","App","useEffect","then","todolists","userJSON","getItem","parse","replace","found","find","newList","concat","catch","matchList","useMatch","matchTodo","length","path","element","updatedTodo","updatedLists","newTodo","returnedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41fb9320.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nconst SidePanelView = ({ lists, user, setUser, setLists, addList }) => {\n  const [name, setName] = useState('')\n  let navigate = useNavigate()\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('user')\n    setUser(null)\n    setLists([])\n    navigate('/login')\n  }\n\n  const handleAddList = (event) => {\n    event.preventDefault()\n\n    addList(name)\n    setName('')\n  }\n\n  if (!user) {\n    return (\n      <div className='sidepanel'>\n        <p>Log in to create lists</p>\n      </div>\n    )\n  }\n\n  if (!lists) {\n    return (\n      <div className='sidepanel'>\n        loading lists...\n      </div>\n    )\n  }\n  \n  return (\n    <div className='sidepanel'>\n      <button onClick={handleLogout}>log out</button>\n      <button onClick={() => navigate('/')}>home</button>\n      \n      {false &&\n      <form onSubmit={handleAddList}>\n        <div>\n            list name\n            <input\n            type='text'\n            value={name}\n            name='name'\n            onChange={({ target }) => setName(target.value)} />\n        </div>\n        <button type='submit'>add list</button>\n      </form>}\n\n      {lists.map(list => <div className='link' key={list.id}>\n        <Link to={`/${list.name}`}>{list.name}</Link>\n      </div>)}\n\n      <button onClick={() => navigate('/')}>+</button>\n    </div>\n  )\n}\n\nexport default SidePanelView","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst ListView = ({ list, addTodo, removeTodo, removeList }) => {\n  const navigate = useNavigate()\n  const [showTodoForm, setShowTodoForm] = useState(false)\n  const [filter, setFilter] = useState('all')\n\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [deadline, setDeadline] = useState(new Date().toISOString().substring(0, 10))\n\n  const handleAddTodo = (event) => {\n    event.preventDefault()\n\n    addTodo(list.id, { name, description, status: false, deadline })\n\n    setShowTodoForm(false)\n    setName('')\n    setDescription('')\n    setDeadline(new Date().toISOString().substring(0, 10))\n  }\n\n  const handleRemoveTodo = (todo) => {\n    if (window.confirm(`Do you want to remove ${todo.name}?`)) {\n      removeTodo(list.id, todo.id)\n    }\n  }\n\n  const handleRemoveList = (list) => {\n    if (window.confirm(`Do you want to remove ${list.name}?`)) {\n      navigate('/')\n      removeList(list.id)\n    }\n  }\n\n  const handleChangeFilter = () => {\n    if (filter === 'all') {\n      setFilter('not done')\n    } else if (filter === 'not done') {\n      setFilter('done')\n    } else {\n      setFilter('all')\n    }\n  }\n\n  if (!list) {\n    return (\n      <div className='view'>\n        loading list...\n      </div>\n    )\n  }\n\n  return (\n    <div className='view'>\n      <h4>\n        {list.name}\n        <button onClick={() => handleRemoveList(list)}>remove this list</button>\n      </h4>\n\n      {showTodoForm &&\n      <form onSubmit={handleAddTodo}>\n        <div>\n          <input\n            type='text'\n            placeholder='name'\n            value={name}\n            name='name'\n            onChange={({ target }) => setName(target.value)} />\n        </div>\n        <div>\n          <textarea\n            placeholder='description (optional)'\n            value={description}\n            name='description'\n            onChange={({ target }) => setDescription(target.value)}></textarea>\n        </div>\n        <div>\n          <input\n            type='date'\n            value={deadline}\n            name='deadline'\n            onChange={({ target }) => setDeadline(target.value)} />\n        </div>\n        <button type='submit'>add</button>\n      </form>}\n      <button onClick={() => setShowTodoForm(!showTodoForm)}>{showTodoForm ? 'cancel' : 'add todo'}</button>\n\n      {!showTodoForm &&\n      <div className='list'>\n        <button onClick={() => handleChangeFilter()}>{filter}</button>\n\n        {list.todos\n          .filter(todo =>\n            filter === 'done'\n              ? todo.status\n              : filter === 'not done'\n                ? !todo.status\n                : true\n          )\n          .sort((a, b) => new Date(a.deadline).getTime() - new Date(b.deadline).getTime())\n          .map(todo => <div className='link' key={todo.id}>\n          <Link to={`/${list.name}/${todo.id}`}>{todo.name}</Link>\n          <button name='remove' onClick={() => handleRemoveTodo(todo)}>remove</button>\n          <p>{new Date(todo.deadline).toDateString()} { todo.status ? '✔' : '✖' }</p>\n        </div>)}\n      </div>}\n    </div>\n  )\n}\n\nexport default ListView","import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\nconst TodoView = ({ todo, editTodo }) => {\n  const params = useParams()\n\n  const handleEditTodo = () => {\n    const changedTodo = {\n      status: !todo.status\n    }\n\n    editTodo(todo.id, changedTodo)\n  }\n\n  if (!todo) {\n    return (\n      <div className='view'>\n        loading todo...\n      </div>\n    )\n  }\n\n  return (\n    <div className='view'>\n      <div className='link'>\n        <Link to={`/${params.list}`}>{`< ${params.list}`}</Link>\n      </div>\n\n      <h4>{todo.name}</h4>\n      <div>{todo.description}</div>\n      <div>{new Date(todo.deadline).toDateString()}</div>\n      <div>done <input type='checkbox' defaultChecked={todo.status} onChange={() => handleEditTodo()} /></div>\n    </div>\n  )\n}\n\nexport default TodoView","import React, { useState } from 'react'\n\nconst DefaultView = ({ addList }) => {\n  const [name, setName] = useState('')\n\n  const handleAddList = (event) => {\n    event.preventDefault()\n\n    addList(name)\n    setName('')\n  }\n\n  return (\n    <div className='view'>\n      <h3>Add list</h3>\n      <form onSubmit={handleAddList}>\n        <div>\n            list name\n            <input\n            type='text'\n            value={name}\n            name='name'\n            onChange={({ target }) => setName(target.value)} />\n        </div>\n        <button type='submit'>add list</button>\n      </form>\n    </div>\n  )\n}\n\nexport default DefaultView","import axios from 'axios'\n\nconst login = async (credentials) => {\n  const response = await axios.post('/api/login', credentials)\n  return response.data\n}\n\nconst signin = async (credentials) => {\n  const response = await axios.post('/api/users', credentials)\n  return response.data\n}\n\n// eslint-disable-next-line\nexport default { login, signin }","import axios from 'axios'\nconst baseUrl = '/api/todos'\n\nlet bearer = null\n\nconst setToken = (token) => {\n  bearer = `bearer ${token}`\n}\n\nconst getTodoLists = async () => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst addList = async (list) => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.post(baseUrl, list, config)\n  return response.data\n}\n\nconst removeList = async (listId) => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${listId}`, config)\n  return response.data\n}\n\nconst addTodo = async (listId, todo) => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.post(`${baseUrl}/${listId}`, todo, config)\n  return response.data\n}\n\nconst removeTodo = async (listId, todoId) => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${listId}/${todoId}`, config)\n  return response.data\n}\n\nconst editTodo = async (todoId, todo) => {\n  const config = {\n    headers: { Authorization: bearer }\n  }\n\n  const response = await axios.put(`${baseUrl}/${todoId}`, todo, config)\n  return response.data\n}\n\n// eslint-disable-next-line\nexport default { setToken, getTodoLists, addList, removeList, addTodo, removeTodo, editTodo }","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport loginService from '../services/login'\nimport todoService from '../services/todos'\n\nconst LoginView = ({ setUser }) => {\n  const [signup, setSignup] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  let navigate = useNavigate()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      })\n\n      window.localStorage.setItem(\n        'user', JSON.stringify(user)\n      )\n      \n      todoService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n      navigate('/')\n    } catch (exception) {\n      window.alert('Log in failed!')\n    }\n  }\n\n  const handleSignup = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.signin({\n        username,\n        password\n      })\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      window.alert('Sign in failed: try another username.')\n    }\n  }\n\n  return (\n    <div className='view'>\n      <h3>{signup ? 'Sign up' : 'Log in'}</h3>\n\n      <form onSubmit={signup ? handleSignup : handleLogin}>\n        <div>\n          username\n          <input\n          type='text'\n          value={username}\n          name='username'\n          onChange={({ target }) => setUsername(target.value)} />\n        </div>\n        <div>\n          password\n          <input\n          type='password'\n          values={password}\n          name='password'\n          onChange={({ target }) => setPassword(target.value)} />\n        </div>\n        <button type='submit'>{signup ? 'sign up' : 'log in'}</button>\n      </form>\n\n      {!signup && <p>Create username and password</p>}\n      <button onClick={() => setSignup(!signup)}>{signup ? 'back' : 'create profile'}</button>\n    </div>\n  )\n}\n\nexport default LoginView","import React, { useState, useEffect } from 'react'\nimport { Routes, Route, useMatch, useNavigate } from 'react-router-dom'\nimport SidePanelView from './components/SidePanelView'\nimport ListView from './components/ListView'\nimport TodoView from './components/TodoView'\nimport DefaultView from './components/DefaultView'\nimport LoginView from './components/LoginView'\n\nimport todoService from './services/todos'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [lists, setLists] = useState([])\n\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    if (user) {\n      todoService\n        .getTodoLists()\n        .then(todolists => {\n          setLists(todolists)\n        })\n    }\n  }, [user])\n\n  useEffect(() => {\n    const userJSON = window.localStorage.getItem('user')\n    if (userJSON) {\n      const user = JSON.parse(userJSON)\n      setUser(user)\n      todoService.setToken(user.token)\n    } else {\n      navigate('/login', { replace: true })\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  const addList = (name) => {\n    const found = lists.find(list => list.name === name)\n    if (!found) {\n      const newList = {\n        name,\n        todos: []\n      }\n\n      todoService\n        .addList(newList)\n        .then(list => {\n          setLists(lists.concat(list))\n        })\n        .catch(() => {\n          window.alert('Try different name. Must be at least one character.')\n        })\n    } else {\n      window.alert(`List ${name} already exists!`)\n    }\n  }\n\n  const removeList = (id) => {\n    todoService\n      .removeList(id)\n      .then(() => {\n        setLists(lists.filter(list => list.id !== id))\n      })\n  }\n\n  const addTodo = (listId, todo) => {\n    const deadline = new Date(todo.deadline)\n    const newTodo = {\n      ...todo,\n      deadline: deadline\n    }\n\n    todoService\n      .addTodo(listId, newTodo)\n      .then(returnedTodo => {\n        const updatedLists = lists.map(list => list.id === listId\n          ? { ...list, todos: list.todos.concat(returnedTodo) }\n          : list)\n        setLists(updatedLists)\n      })\n      .catch(() => {\n        window.alert('Todo must contain name and deadline in correct format.')\n      })\n  }\n\n  const removeTodo = (listId, todoId) => {\n    todoService\n      .removeTodo(listId, todoId)\n      .then(() => {\n        const updatedLists = lists.map(list => list.id === listId\n          ? { ...list, todos: list.todos.filter(todo => todo.id !== todoId) }\n          : list)\n        setLists(updatedLists)\n      })\n  }\n\n  const editTodo = (todoId, changedTodo) => {\n    todoService\n      .editTodo(todoId, changedTodo)\n      .then(updatedTodo => {\n        const updatedLists = lists.map(list => list.id === updatedTodo.list\n          ? { ...list, todos: list.todos.map(todo => todo.id === updatedTodo.id ? updatedTodo : todo) }\n          : list)\n        setLists(updatedLists)\n      })\n  }\n\n  const matchList = useMatch('/:list')\n  const matchTodo = useMatch('/:list/:id')\n  \n  const list = matchList\n    ? lists.find(list => list.name === matchList.params.list)\n    : []\n  \n  const todo = matchTodo && lists && lists.length > 0\n    ? lists.find(list => list.name === matchTodo.params.list)\n        .todos.find(todo => todo.id === matchTodo.params.id)\n    : {}\n\n  return (\n    <div>\n      <div className='header'>\n        <h2>Todos</h2>\n      </div>\n\n      <div className='container'>\n        <SidePanelView lists={lists} user={user} setUser={setUser} setLists={setLists} addList={addList} />\n\n        <Routes>\n          <Route path='/login' element={<LoginView setUser={setUser} />} />\n          <Route path='/:list/:id' element={<TodoView todo={todo} editTodo={editTodo} />} />\n          <Route path='/:list' element={<ListView list={list} addTodo={addTodo} removeTodo={removeTodo} removeList={removeList} />} />\n          <Route path='/' element={<DefaultView addList={addList} />} />\n        </Routes>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}